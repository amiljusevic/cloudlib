
cloudlib.tests package
**********************


cloudlib.tests.test_config_file module
======================================

class class cloudlib.tests.test_config_file.TestConfigFileIni(methodName='runTest')

   Bases: "unittest.case.TestCase"

   setUp()

   test_sys_config()

   test_sys_config_config_args_parse_default_section()

   test_sys_config_config_args_parse_other_section()

   test_sys_config_ext()

   test_sys_config_find_config_fail()

   test_sys_config_find_config_success()

   test_sys_config_home()

   test_sys_config_home_ext()

   test_sys_config_not_found()

   test_sys_config_path()

   test_sys_config_path_ext()

   test_sys_config_path_home_ext()

   test_sys_config_path_strip_slash()

   test_sys_config_perms()

   test_sys_config_perms_fail()


cloudlib.tests.test_http_rest module
====================================

class class cloudlib.tests.test_http_rest.TestHttpMakeRequest(methodName='runTest')

   Bases: "unittest.case.TestCase"

   setUp()

   test_custom_headers()

   test_delete_request()

   test_delete_request_headers()

   test_delete_request_kwargs()

   test_enable_debug()

   test_get_request()

   test_get_request_headers()

   test_get_request_kwargs()

   test_head_request()

   test_head_request_headers()

   test_head_request_kwargs()

   test_html_encode_url()

   test_option_request()

   test_option_request_headers()

   test_option_request_kwargs()

   test_parse_url_double_slash_url()

   test_parse_url_http_url()

   test_parse_url_https_url()

   test_patch_request()

   test_patch_request_body()

   test_patch_request_headers()

   test_patch_request_kwargs()

   test_post_request()

   test_post_request_body()

   test_post_request_headers()

   test_post_request_kwargs()

   test_put_request()

   test_put_request_body()

   test_put_request_headers()

   test_put_request_kwargs()

   test_report_error()

   test_request_failure()

   test_timeout_set()


cloudlib.tests.test_logger_logger module
========================================

class class cloudlib.tests.test_logger_logger.TestLogger(methodName='runTest')

   Bases: "unittest.case.TestCase"

   setUp()

   test_logger_debug_logging()

   test_logger_debug_logging_enabled()

   test_logger_max_backup()

   test_logger_max_size()

   test_logger_override_backup()

   test_logger_override_max_backup()

   test_logger_override_max_size()

   test_logger_return_logfile_not_root()

   test_logger_return_logfile_not_root_new_log_dir()

   test_logger_return_logfile_root()

   test_logger_return_logfile_root_log_dir_not_found()

   test_logger_return_logfile_root_new_log_dir()

class class cloudlib.tests.test_logger_logger.TestLoggerHandlers(methodName='runTest')

   Bases: "unittest.case.TestCase"

   setUp()

   test_logger_default_logger()

   test_logger_default_logger_new_formatter()

   test_logger_enable_file()

   test_logger_enable_stream()

   test_logger_enable_stream_enable_file()

   test_logger_set_handler()


cloudlib.tests.test_messaging_mail module
=========================================

class class cloudlib.tests.test_messaging_mail.TestMessagingMail(methodName='runTest')

   Bases: "unittest.case.TestCase"

   setUp()

   test_no_config()

   test_no_missing_port()

   test_no_missing_url()

   test_no_missing_values()

   test_smtp()

   test_smtp_debug()

   test_smtp_login()

   test_smtp_login_debug()

   test_smtp_login_debug_ssl()

   test_smtp_login_ssl()

   test_smtp_send()

   test_smtp_send_reply()

class class cloudlib.tests.test_messaging_mail.TestMessagingMailException(methodName='runTest')

   Bases: "unittest.case.TestCase"

   setUp()

   test_smtp_send_exception()


cloudlib.tests.test_utils_basic module
======================================

class class cloudlib.tests.test_utils_basic.TestBasicUtils(methodName='runTest')

   Bases: "unittest.case.TestCase"

   test_ensure_dict_update()

   test_ensure_string_str()

   test_ensure_string_unicode()

   test_is_int_is_int()

   test_is_int_is_str()


Module contents
===============

class class cloudlib.tests.FakeHttp

   Bases: "object"

   Setup a FAKE http request.

   delete(*args, **kwargs)

   get(*args, **kwargs)

   head(*args, **kwargs)

   option(*args, **kwargs)

   patch(*args, **kwargs)

   post(*args, **kwargs)

   put(*args, **kwargs)

class class cloudlib.tests.FakeHttpResponse(*args, **kwargs)

   Bases: "object"

class class cloudlib.tests.FakeSmtp(url, port)

   Bases: "object"

   Setup a FAKE SMTP request.

   login(*args, **kwargs)

   quit(*args, **kwargs)

   sendmail(*args, **kwargs)

   set_debuglevel(*args, **kwargs)

   starttls(key=None, cert=None)

class class cloudlib.tests.Handlers(filename=None, maxBytes=None, backupCount=None)

   Bases: "object"

   setFormatter(*args)

   setLevel(*args)

class class cloudlib.tests.Logger(name=None)

   Bases: "object"

   addHandler(*args)

   setLevel(*args)

class class cloudlib.tests.ParseResult

   Bases: "object"

   fragment = ''

   netloc = 'TEST.url'

   params = ''

   path = '/v2.0/tokens'

   query = ''

   scheme = 'https'

class class cloudlib.tests.StatResult

   Bases: "object"

   st_atime = 1396506114

   st_ctime = 1396506114

   st_dev = 16777220L

   st_gid = 100

   st_ino = 1698903

   st_mode = 33152

   st_mtime = 1396506114

   st_nlink = 1

   st_size = 2230944256

   st_uid = 100

cloudlib.tests.returnstring(fmt=None, datefmt=None)

cloudlib.tests.test_Exception_exception()

   Raise Exception exception.
